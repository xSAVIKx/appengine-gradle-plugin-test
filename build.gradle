buildscript {
    configurations.all {
        resolutionStrategy.cacheChangingModulesFor 0, "seconds"
    }
    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url = spineRepository }
        maven { url = spineSnapshotsRepository }
    }
    dependencies {
        classpath "dom4j:dom4j:1.6.1"
        classpath "com.gradle:build-scan-plugin:1.6"
        classpath "org.spine3.tools:reflections-plugin:0.8.7-SNAPSHOT"
        classpath "com.google.cloud.tools:appengine-gradle-plugin:1.1.1"
        classpath "com.google.protobuf:protobuf-gradle-plugin:0.8.1"
        classpath "org.spine3.tools:protobuf-plugin:0.8.7-SNAPSHOT"
    }
}
apply plugin: "com.gradle.build-scan"

buildScan {
    licenseAgreementUrl = 'https://gradle.com/terms-of-service'
    licenseAgree = 'yes'
}

defaultTasks "clean", "build"

allprojects {
    apply plugin: 'maven'
    group 'app-engine'
    version = moduleVersion
}

subprojects {
    ext.scriptsDir = "$rootProject.rootDir/scripts"
    ext.sourceDir = "$projectDir/src"
    ext.generatedSourceDir = "$projectDir/generated"
    ext.generatedSourceDirMain = "$generatedSourceDir/main"
    ext.generatedResourcesDir = "$generatedSourceDirMain/resources"
    apply plugin: 'java'
    apply plugin: 'reflections-plugin'
    apply from: "$scriptsDir/dependencies/dependencies.gradle"
    repositories {   // repositories for Jar's you access in your code
        mavenLocal()
        maven {
            url 'https://maven-central.storage.googleapis.com'
            // Google's mirror of Maven Central
        }
        maven { url = spineRepository }
        maven { url = spineSnapshotsRepository }
        jcenter()
        mavenCentral()
    }
    sourceSets {
        main {
            resources.srcDirs += files("$generatedResourcesDir")
        }
    }
    reflectionsPlugin {
        targetDir = "$generatedResourcesDir/META-INF/reflections"
    }

    task('cleanGeneratedSources', type: Delete) {
        description 'Remove files generated by Protobuf and Spine plugins'
        delete file("$generatedSourceDir")
    }
    clean.dependsOn('cleanGeneratedSources')

    sourceCompatibility = JavaVersion.VERSION_1_7
    targetCompatibility = JavaVersion.VERSION_1_7
}

task wrapper(type: Wrapper) {
    gradleVersion = project.gradleVersion
}
